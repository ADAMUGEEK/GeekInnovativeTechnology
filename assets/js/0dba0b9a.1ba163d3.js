"use strict";(self.webpackChunkGeek_ink=self.webpackChunkGeek_ink||[]).push([[903],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:5},o="Sets and Dictionaries (Day 4)",s={unversionedId:"python/Day4",id:"python/Day4",title:"Sets and Dictionaries (Day 4)",description:"Exploring Sets and Dictionaries:",source:"@site/docs/python/Day4.mdx",sourceDirName:"python",slug:"/python/Day4",permalink:"/docs/python/Day4",draft:!1,editUrl:"https://github.com/AdamsGeeky/docs/python/Day4.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Lists and Tuples (Day 3)",permalink:"/docs/python/Day3"},next:{title:"Functions and Creativity",permalink:"/docs/python/Day5-6"}},l={},c=[{value:"Exploring Sets and Dictionaries:",id:"exploring-sets-and-dictionaries",level:2},{value:"Why Sets Matter:",id:"why-sets-matter",level:2},{value:"Creating and Working with Sets:",id:"creating-and-working-with-sets",level:3},{value:"Why Dictionaries Matter:",id:"why-dictionaries-matter",level:2},{value:"Creating and Working with Dictionaries:",id:"creating-and-working-with-dictionaries",level:3},{value:"output",id:"output",level:2},{value:"Explanation of each step:",id:"explanation-of-each-step",level:2},{value:"Project: Online Marketplace",id:"project-online-marketplace",level:2},{value:"\ud83d\udca1 Putting It All Together",id:"-putting-it-all-together",level:2},{value:"New Features Coming Tomorrow:",id:"new-features-coming-tomorrow",level:2},{value:"\ud83d\ude80 Your Coding Adventure Continues",id:"-your-coding-adventure-continues",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sets-and-dictionaries-day-4"},"Sets and Dictionaries (Day 4)"),(0,a.kt)("h2",{id:"exploring-sets-and-dictionaries"},"Exploring Sets and Dictionaries:"),(0,a.kt)("p",null,"Unlocking Unique Collections and Optimized Data Access"),(0,a.kt)("h1",{id:"objective"},"Objective:"),(0,a.kt)("p",null,"By the end of Day 4 of the boot camp, participants should have a comprehensive understanding of sets and dictionaries in Python. They should be able to distinguish between sets, lists, and tuples, and confidently utilize dictionaries for efficient data storage and retrieval."),(0,a.kt)("p",null,"Participants should also be capable of applying sets and dictionaries to real-world scenarios, demonstrating their understanding through immersive projects."),(0,a.kt)("h1",{id:"-sets-uniqueness-at-its-core"},"\ud83c\udf00 Sets: Uniqueness at Its Core"),(0,a.kt)("p",null,"Imagine you're collecting gemstones \u2013 you'd want each gemstone to be unique, right? In programming, sets offer this exact quality. Sets are collections of unique elements, ensuring that no duplicate values exist. This distinctive property makes sets invaluable for tasks that involve managing unique items or filtering out repetitions."),(0,a.kt)("h2",{id:"why-sets-matter"},"Why Sets Matter:"),(0,a.kt)("p",null,"Distinct Elements: Sets automatically eliminate duplicate elements, allowing you to focus on the uniqueness of data."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Fast Membership Tests"),": Checking whether an element exists in a set is exceptionally fast, even for large collections."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Mathematical Operations:")," Sets support powerful set operations like union, intersection, and difference, which can simplify complex tasks."),(0,a.kt)("h3",{id:"creating-and-working-with-sets"},"Creating and Working with Sets:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Creating a set\ncolors = {"red", "green", "blue"}\n\n# Adding elements to a set\ncolors.add("yellow")\n\n# Removing an element from a set\ncolors.remove("green")\n\n# Checking membership\nif "blue" in colors:\n    print("Blue is in the set")\n\n# Performing set operations\nset1 = {1, 2, 3}\nset2 = {3, 4, 5}\nunion = set1 | set2\nintersection = set1 & set2\ndifference = set1 - set2\n')),(0,a.kt)("h1",{id:"-dictionaries-optimized-data-access"},"\ud83d\udcda Dictionaries: Optimized Data Access"),(0,a.kt)("p",null,"Imagine a library where each book has a unique call number \u2013 you can quickly locate any book using its call number. Dictionaries in programming work similarly. They store data in key-value pairs, enabling rapid access to values based on their associated keys. Dictionaries are fundamental for building efficient data structures, like databases."),(0,a.kt)("h2",{id:"why-dictionaries-matter"},"Why Dictionaries Matter:"),(0,a.kt)("p",null,"Fast Data Retrieval: Dictionaries use keys for direct data access, making lookups faster than iterating through lists."),(0,a.kt)("p",null,"Flexible Data Storage: Values can be of any data type, allowing dictionaries to represent complex relationships between elements."),(0,a.kt)("p",null,"Key-Value Mapping: Dictionaries provide a clear mapping between keys and their corresponding values, improving data organization."),(0,a.kt)("h3",{id:"creating-and-working-with-dictionaries"},"Creating and Working with Dictionaries:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Creating a dictionary\nstudent_scores = {\n    "AdamsGeeky": 95,\n    "Fadila": 87,\n    "Aish": 92\n}\n\n# Accessing values using keys\naish_score = student_scores["Aish"]\n\n# Adding a new key-value pair\nstudent_scores["Ibrahim"] = 78\n\n# Removing a key-value pair\ndel student_scores["Fadila"]\n\n# Checking key existence\nif "Ibrahim" in student_scores:\n    print("Ibrahim\'s score:", student_scores["Ibrahim"])\n')),(0,a.kt)("h2",{id:"output"},"output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Ibrahim's score: 78\n")),(0,a.kt)("h2",{id:"explanation-of-each-step"},"Explanation of each step:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The dictionary student_scores is created with three initial key-value pairs."),(0,a.kt)("li",{parentName:"ol"},"The line ",(0,a.kt)("strong",{parentName:"li"},"aish_score = student_scores",'["Aish"]'),' accesses the value associated with the key "Aish" and assigns it to the variable aish_score.'),(0,a.kt)("li",{parentName:"ol"},"The line ",(0,a.kt)("strong",{parentName:"li"},"student_scores",'["Ibrahim"]'," = 78"),' adds a new key-value pair "Ibrahim": 78 to the dictionary.'),(0,a.kt)("li",{parentName:"ol"},"The line ",(0,a.kt)("strong",{parentName:"li"},"del student_scores",'["Fadila"]'),' removes the key-value pair associated with the key "Fadila" from the dictionary.'),(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("strong",{parentName:"li"},'if "Ibrahim" in student_scores:'),' statement checks if the key "Ibrahim" exists in the dictionary. Since it does, the following line is executed, and "Ibrahim"\'s score is printed.')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The final output is Ibrahim's score: 78")),(0,a.kt)("h1",{id:"-real-world-scenarios-applying-sets-and-dictionaries"},"\ud83c\udf0d Real-World Scenarios: Applying Sets and Dictionaries"),(0,a.kt)("p",null,"As you dive deeper into the realm of data structures, let's explore real-world scenarios where sets and dictionaries shine."),(0,a.kt)("h2",{id:"project-online-marketplace"},"Project: Online Marketplace"),(0,a.kt)("p",null,"Imagine you're building an online marketplace. Here's how sets and dictionaries can be employed:"),(0,a.kt)("p",null,"Sets: Use sets to maintain a unique list of product categories. This prevents duplicate categories and helps users easily navigate through different types of products."),(0,a.kt)("p",null,"Dictionaries: Utilize dictionaries to store product information. Keys could be product IDs, and values could be dictionaries containing details like name, price, and availability."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Online Marketplace Example\n\n# Set for product categories\nproduct_categories = {"Electronics", "Clothing", "Books", "Beauty"}\n\n# Dictionary for product information\nproducts = {\n    101: {"name": "Smartphone", "price": 499.99, "availability": True},\n    102: {"name": "T-shirt", "price": 19.99, "availability": False},\n    # ... other products\n}\n')),(0,a.kt)("h2",{id:"-putting-it-all-together"},"\ud83d\udca1 Putting It All Together"),(0,a.kt)("p",null,"Sets and dictionaries are powerful additions to your programming arsenal. Sets ensure data uniqueness and efficient membership tests, while dictionaries provide optimized data access with key-value mappings. By incorporating these data structures into real-world projects, you're building practical and efficient solutions."),(0,a.kt)("h1",{id:"exciting-updates-for-tomorrows-session"},"Exciting Updates for Tomorrow's Session"),(0,a.kt)("p",null,"Hello, fellow programmer! We hope you're enjoying the journey so far. Tomorrow, get ready to take your programming skills to the next level as we dive into the world of functions. Functions are like powerful tools that help us organize our code, making it more efficient and modular."),(0,a.kt)("p",null,"But that's not all! We're not stopping at functions. We're going to add even more exciting features to our online marketplace project, making it an even more immersive and dynamic experience. So, brace yourselves for a session filled with learning, creativity, and hands-on coding."),(0,a.kt)("p",null,"Remember our marketplace project? Well, get ready for these new additions:"),(0,a.kt)("h2",{id:"new-features-coming-tomorrow"},"New Features Coming Tomorrow:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"User Authentication\nWe'll introduce user authentication to enhance security. Users will need to log in to access their carts and account details.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Wishlist\nUsers will be able to create a wishlist of products they're interested in. It's like creating a personalized shopping plan!")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Filtering and Sorting\nWe'll implement the ability to filter products by category and sort them by different criteria, giving users more control over their shopping experience."))),(0,a.kt)("h3",{id:"-your-coding-adventure-continues"},"\ud83d\ude80 Your Coding Adventure Continues"),(0,a.kt)("p",null,"With these features and the power of functions, you'll be equipped to create a robust, user-friendly, and efficient online marketplace. We're excited to see your coding skills grow and your projects flourish."),(0,a.kt)("p",null,"So, mark your calendars, charge your devices, and join us for an action-packed session tomorrow. Together, we're taking strides towards becoming coding experts, one concept at a time."),(0,a.kt)("p",null,"Just as explorers rely on their tools to navigate through uncharted territories, programmers rely on data structures to navigate through the complexities of coding. With sets and dictionaries in your toolkit, you're equipped to conquer coding challenges with finesse and precision. \ud83d\ude80"),(0,a.kt)("p",null,"See you tomorrow for another thrilling day of coding exploration! \ud83c\udf1f\ud83d\udc69\u200d\ud83d\udcbb\ud83d\udc68\u200d\ud83d\udcbb"))}p.isMDXComponent=!0}}]);