"use strict";(self.webpackChunkgeekink=self.webpackChunkgeekink||[]).push([[6218],{4850:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=r(5893),s=r(1151);const i={sidebar_position:4},o="Assignments",a={id:"C/ass",title:"Assignments",description:"project 1",source:"@site/docs/C/ass.mdx",sourceDirName:"C",slug:"/C/ass",permalink:"/docs/C/ass",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Past Questions",permalink:"/docs/C/questions"},next:{title:"DSA",permalink:"/docs/category/dsa"}},u={},c=[{value:"project 1",id:"project-1",level:2},{value:"project 2",id:"project-2",level:2},{value:"project 3",id:"project-3",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"assignments",children:"Assignments"}),"\n",(0,t.jsx)(e.h2,{id:"project-1",children:"project 1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nint main() {\n    double num1, num2, result;\n    char operator;\n\n    // Get user input\n    printf("Enter first number: ");\n    scanf("%lf", &num1);\n\n    printf("Enter operator (+, -, *, /): ");\n    scanf(" %c", &operator);  // Note the space before %c to consume any whitespace characters\n\n    printf("Enter second number: ");\n    scanf("%lf", &num2);\n\n    // Perform arithmetic operations\n    switch (operator) {\n        case \'+\':\n            result = num1 + num2;\n            break;\n        case \'-\':\n            result = num1 - num2;\n            break;\n        case \'*\':\n            result = num1 * num2;\n            break;\n        case \'/\':\n            if (num2 != 0) {\n                result = num1 / num2;\n            } else {\n                printf("Error: Division by zero is not allowed.\\n");\n                return 1;  // Exit with an error code\n            }\n            break;\n        default:\n            printf("Error: Invalid operator.\\n");\n            return 1;  // Exit with an error code\n    }\n\n    // Display the result\n    printf("Result: %.2lf %c %.2lf = %.2lf\\n", num1, operator, num2, result);\n\n    return 0;  // Exit successfully\n}\n\n'})}),"\n",(0,t.jsx)(e.h2,{id:"project-2",children:"project 2"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\ndouble calculateGradePoints(double grade) // function protype\nint main() {\n    int numCourses;\n    printf("Enter the number of courses: ");\n    scanf("%d", &numCourses);\n\n    // Ensure a valid number of courses is entered\n    if (numCourses <= 0) {\n        printf("Error: Please enter a valid number of courses.\\n");\n        return 1;  // Exit with an error code\n    }\n\n    double totalCredits = 0.0;\n    double totalGradePoints = 0.0;\n\n    for (int i = 1; i <= numCourses; ++i) {\n        double credits, grade;\n        printf("\\nEnter details for Course %d:\\n", i);\n\n        // Get user input for course credits\n        printf("Enter credits for Course %d: ", i);\n        scanf("%lf", &credits);\n\n        // Get user input for course grade\n        printf("Enter grade for Course %d: ", i);\n        scanf("%lf", &grade);\n\n        // Validate the grade entered\n        if (grade < 0 || grade > 100) {\n            printf("Error: Please enter a valid grade between 0 and 100.\\n");\n            return 1;  // Exit with an error code\n        }\n\n        // Calculate grade points based on the provided scale\n        double gradePoints = calculateGradePoints(grade);\n\n        // Update total credits and grade points\n        totalCredits += credits;\n        totalGradePoints += credits * gradePoints;\n    }\n\n    // Calculate GPA\n    double gpa = totalGradePoints / totalCredits;\n\n    // Display the GPA\n    printf("\\nYour GPA is: %.2lf\\n", gpa);\n\n    return 0;  // Exit successfully\n}\n// function defination\ndouble calculateGradePoints(double grade) {\n    if (grade >= 70) {\n        return 5.0;\n    } else if (grade >= 60) {\n        return 4.0;\n    } else if (grade >= 50) {\n        return 3.0;\n    } else if (grade >= 45) {\n        return 2.0;\n    } else if (grade >= 40) {\n        return 1.0;\n    } else {\n        return 0.0;\n    }\n}\n\n'})}),"\n",(0,t.jsx)(e.h2,{id:"project-3",children:"project 3"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// Function to convert Celsius to Fahrenheit\ndouble celsiusToFahrenheit(double celsius) {\n    return (celsius * 9 / 5) + 32;\n}\n\n// Function to convert Fahrenheit to Celsius\ndouble fahrenheitToCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nint main() {\n    int choice;\n    double temperature;\n\n    // Get user\'s choice\n    printf("Choose conversion:\\n");\n    printf("1. Celsius to Fahrenheit\\n");\n    printf("2. Fahrenheit to Celsius\\n");\n    printf("Enter choice (1 or 2): ");\n    scanf("%d", &choice);\n\n    // Get temperature from user\n    printf("Enter temperature: ");\n    scanf("%lf", &temperature);\n\n    // Perform conversion based on user\'s choice\n    switch (choice) {\n        case 1:\n            printf("%.2lf Celsius is equal to %.2lf Fahrenheit\\n", temperature, celsiusToFahrenheit(temperature));\n            break;\n        case 2:\n            printf("%.2lf Fahrenheit is equal to %.2lf Celsius\\n", temperature, fahrenheitToCelsius(temperature));\n            break;\n        default:\n            printf("Error: Invalid choice. Please enter 1 or 2.\\n");\n            return 1;  // Exit with an error code\n    }\n\n    return 0;  // Exit successfully\n}\n\n'})})]})}function d(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>a,a:()=>o});var t=r(7294);const s={},i=t.createContext(s);function o(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);